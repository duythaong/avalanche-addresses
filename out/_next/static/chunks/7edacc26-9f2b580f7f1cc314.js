"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[626],{10400:function(t,e,i){var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(o,a){function r(t){try{d(s.next(t))}catch(e){a(e)}}function n(t){try{d(s.throw(t))}catch(e){a(e)}}function d(t){var e;t.done?o(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,n)}d((s=s.apply(t,e||[])).next())}))},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.PlatformVMAPI=void 0;const a=i(13055),r=o(i(6141)),n=i(98769),d=o(i(89734)),l=i(8201),h=i(89858),c=i(78034),u=i(11713),f=i(77673),g=i(3421),A=i(74906),m=i(77556),p=i(37883),y=i(3079),D=d.default.getInstance(),k=y.Serialization.getInstance();class b extends n.JRPCAPI{constructor(t,e="/ext/bc/P"){super(t,e),this.keychain=new l.KeyChain("",""),this.blockchainID=h.PlatformChainID,this.blockchainAlias=void 0,this.AVAXAssetID=void 0,this.txFee=void 0,this.creationTxFee=void 0,this.minValidatorStake=void 0,this.minDelegatorStake=void 0,this.getBlockchainAlias=()=>{if("undefined"===typeof this.blockchainAlias){const t=this.core.getNetworkID();return t in h.Defaults.network&&this.blockchainID in h.Defaults.network[`${t}`]?(this.blockchainAlias=h.Defaults.network[`${t}`][this.blockchainID].alias,this.blockchainAlias):void 0}return this.blockchainAlias},this.setBlockchainAlias=t=>{this.blockchainAlias=t},this.getBlockchainID=()=>this.blockchainID,this.refreshBlockchainID=t=>{const e=this.core.getNetworkID();return"undefined"===typeof t&&"undefined"!==typeof h.Defaults.network[`${e}`]?(this.blockchainID=h.PlatformChainID,!0):"string"===typeof t&&(this.blockchainID=t,!0)},this.parseAddress=t=>{const e=this.getBlockchainAlias(),i=this.getBlockchainID();return D.parseAddress(t,i,e,c.PlatformVMConstants.ADDRESSLENGTH)},this.addressFromBuffer=t=>{const e=this.getBlockchainAlias()?this.getBlockchainAlias():this.getBlockchainID();return k.bufferToType(t,"bech32",this.core.getHRP(),e)},this.getAVAXAssetID=(t=!1)=>s(this,void 0,void 0,(function*(){if("undefined"===typeof this.AVAXAssetID||t){const t=yield this.getStakingAssetID();this.AVAXAssetID=D.cb58Decode(t)}return this.AVAXAssetID})),this.setAVAXAssetID=t=>{"string"===typeof t&&(t=D.cb58Decode(t)),this.AVAXAssetID=t},this.getDefaultTxFee=()=>this.core.getNetworkID()in h.Defaults.network?new r.default(h.Defaults.network[this.core.getNetworkID()].P.txFee):new r.default(0),this.getTxFee=()=>("undefined"===typeof this.txFee&&(this.txFee=this.getDefaultTxFee()),this.txFee),this.setTxFee=t=>{this.txFee=t},this.getDefaultCreationTxFee=()=>this.core.getNetworkID()in h.Defaults.network?new r.default(h.Defaults.network[this.core.getNetworkID()].P.creationTxFee):new r.default(0),this.getCreationTxFee=()=>("undefined"===typeof this.creationTxFee&&(this.creationTxFee=this.getDefaultCreationTxFee()),this.creationTxFee),this.setCreationTxFee=t=>{this.creationTxFee=t},this.keyChain=()=>this.keychain,this.newKeyChain=()=>{const t=this.getBlockchainAlias();return this.keychain=t?new l.KeyChain(this.core.getHRP(),t):new l.KeyChain(this.core.getHRP(),this.blockchainID),this.keychain},this.checkGooseEgg=(t,e=new r.default(0))=>s(this,void 0,void 0,(function*(){const i=yield this.getAVAXAssetID();let s=e.gt(new r.default(0))?e:t.getOutputTotal(i);const o=t.getBurn(i);return!(!o.lte(h.ONEAVAX.mul(new r.default(10)))&&!o.lte(s))})),this.getStakingAssetID=()=>s(this,void 0,void 0,(function*(){return(yield this.callMethod("platform.getStakingAssetID")).data.result.assetID})),this.createBlockchain=(t,e,i,o,a,r,n)=>s(this,void 0,void 0,(function*(){const s={username:t,password:e,fxIDs:a,vmID:o,name:r,genesisData:n};"string"===typeof i?s.subnetID=i:"undefined"!==typeof i&&(s.subnetID=D.cb58Encode(i));return(yield this.callMethod("platform.createBlockchain",s)).data.result.txID})),this.getBlockchainStatus=t=>s(this,void 0,void 0,(function*(){const e={blockchainID:t};return(yield this.callMethod("platform.getBlockchainStatus",e)).data.result.status})),this.getValidatorsAt=(t,e)=>s(this,void 0,void 0,(function*(){const i={height:t};"undefined"!==typeof e&&(i.subnetID=e);return(yield this.callMethod("platform.getValidatorsAt",i)).data.result})),this.createAddress=(t,e)=>s(this,void 0,void 0,(function*(){const i={username:t,password:e};return(yield this.callMethod("platform.createAddress",i)).data.result.address})),this.getBalance=t=>s(this,void 0,void 0,(function*(){if("undefined"===typeof this.parseAddress(t))throw new m.AddressError("Error - PlatformVMAPI.getBalance: Invalid address format");const e={address:t};return(yield this.callMethod("platform.getBalance",e)).data.result})),this.listAddresses=(t,e)=>s(this,void 0,void 0,(function*(){const i={username:t,password:e};return(yield this.callMethod("platform.listAddresses",i)).data.result.addresses})),this.getCurrentValidators=t=>s(this,void 0,void 0,(function*(){const e={};"string"===typeof t?e.subnetID=t:"undefined"!==typeof t&&(e.subnetID=D.cb58Encode(t));return(yield this.callMethod("platform.getCurrentValidators",e)).data.result})),this.getPendingValidators=t=>s(this,void 0,void 0,(function*(){const e={};"string"===typeof t?e.subnetID=t:"undefined"!==typeof t&&(e.subnetID=D.cb58Encode(t));return(yield this.callMethod("platform.getPendingValidators",e)).data.result})),this.sampleValidators=(t,e)=>s(this,void 0,void 0,(function*(){const i={size:t.toString()};"string"===typeof e?i.subnetID=e:"undefined"!==typeof e&&(i.subnetID=D.cb58Encode(e));return(yield this.callMethod("platform.sampleValidators",i)).data.result.validators})),this.addValidator=(t,e,i,o,a,r,n,d)=>s(this,void 0,void 0,(function*(){const s={username:t,password:e,nodeID:i,startTime:o.getTime()/1e3,endTime:a.getTime()/1e3,stakeAmount:r.toString(10),rewardAddress:n};"undefined"!==typeof d&&(s.delegationFeeRate=d.toString(10));return(yield this.callMethod("platform.addValidator",s)).data.result.txID})),this.addSubnetValidator=(t,e,i,o,a,r,n)=>s(this,void 0,void 0,(function*(){const s={username:t,password:e,nodeID:i,startTime:a.getTime()/1e3,endTime:r.getTime()/1e3,weight:n};"string"===typeof o?s.subnetID=o:"undefined"!==typeof o&&(s.subnetID=D.cb58Encode(o));return(yield this.callMethod("platform.addSubnetValidator",s)).data.result.txID})),this.addDelegator=(t,e,i,o,a,r,n)=>s(this,void 0,void 0,(function*(){const s={username:t,password:e,nodeID:i,startTime:o.getTime()/1e3,endTime:a.getTime()/1e3,stakeAmount:r.toString(10),rewardAddress:n};return(yield this.callMethod("platform.addDelegator",s)).data.result.txID})),this.createSubnet=(t,e,i,o)=>s(this,void 0,void 0,(function*(){const s={username:t,password:e,controlKeys:i,threshold:o},a=yield this.callMethod("platform.createSubnet",s);return a.data.result.txID?a.data.result.txID:a.data.result})),this.validatedBy=t=>s(this,void 0,void 0,(function*(){const e={blockchainID:t};return(yield this.callMethod("platform.validatedBy",e)).data.result.subnetID})),this.validates=t=>s(this,void 0,void 0,(function*(){const e={subnetID:t};"string"===typeof t?e.subnetID=t:"undefined"!==typeof t&&(e.subnetID=D.cb58Encode(t));return(yield this.callMethod("platform.validates",e)).data.result.blockchainIDs})),this.getBlockchains=()=>s(this,void 0,void 0,(function*(){return(yield this.callMethod("platform.getBlockchains")).data.result.blockchains})),this.exportAVAX=(t,e,i,o)=>s(this,void 0,void 0,(function*(){const s={username:t,password:e,to:o,amount:i.toString(10)},a=yield this.callMethod("platform.exportAVAX",s);return a.data.result.txID?a.data.result.txID:a.data.result})),this.importAVAX=(t,e,i,o)=>s(this,void 0,void 0,(function*(){const s={to:i,sourceChain:o,username:t,password:e},a=yield this.callMethod("platform.importAVAX",s);return a.data.result.txID?a.data.result.txID:a.data.result})),this.issueTx=t=>s(this,void 0,void 0,(function*(){let e="";if("string"===typeof t)e=t;else if(t instanceof a.Buffer){const i=new u.Tx;i.fromBuffer(t),e=i.toString()}else{if(!(t instanceof u.Tx))throw new m.TransactionError("Error - platform.issueTx: provided tx is not expected type of string, Buffer, or Tx");e=t.toString()}const i={tx:e.toString()};return(yield this.callMethod("platform.issueTx",i)).data.result.txID})),this.getCurrentSupply=()=>s(this,void 0,void 0,(function*(){const t=yield this.callMethod("platform.getCurrentSupply");return new r.default(t.data.result.supply,10)})),this.getHeight=()=>s(this,void 0,void 0,(function*(){const t=yield this.callMethod("platform.getHeight");return new r.default(t.data.result.height,10)})),this.getMinStake=(t=!1)=>s(this,void 0,void 0,(function*(){if(!0!==t&&"undefined"!==typeof this.minValidatorStake&&"undefined"!==typeof this.minDelegatorStake)return{minValidatorStake:this.minValidatorStake,minDelegatorStake:this.minDelegatorStake};const e=yield this.callMethod("platform.getMinStake");return this.minValidatorStake=new r.default(e.data.result.minValidatorStake,10),this.minDelegatorStake=new r.default(e.data.result.minDelegatorStake,10),{minValidatorStake:this.minValidatorStake,minDelegatorStake:this.minDelegatorStake}})),this.setMinStake=(t,e)=>{"undefined"!==typeof t&&(this.minValidatorStake=t),"undefined"!==typeof e&&(this.minDelegatorStake=e)},this.getStake=(t,e="cb58")=>s(this,void 0,void 0,(function*(){const i={addresses:t,encoding:e},s=yield this.callMethod("platform.getStake",i);return{staked:new r.default(s.data.result.staked,10),stakedOutputs:s.data.result.stakedOutputs.map((t=>{const i=new p.TransferableOutput;let s;return s="cb58"===e?D.cb58Decode(t):a.Buffer.from(t.replace(/0x/g,""),"hex"),i.fromBuffer(s,2),i}))}})),this.getSubnets=t=>s(this,void 0,void 0,(function*(){const e={};void 0!==typeof t&&(e.ids=t);return(yield this.callMethod("platform.getSubnets",e)).data.result.subnets})),this.exportKey=(t,e,i)=>s(this,void 0,void 0,(function*(){const s={username:t,password:e,address:i},o=yield this.callMethod("platform.exportKey",s);return o.data.result.privateKey?o.data.result.privateKey:o.data.result})),this.importKey=(t,e,i)=>s(this,void 0,void 0,(function*(){const s={username:t,password:e,privateKey:i},o=yield this.callMethod("platform.importKey",s);return o.data.result.address?o.data.result.address:o.data.result})),this.getTx=t=>s(this,void 0,void 0,(function*(){const e={txID:t},i=yield this.callMethod("platform.getTx",e);return i.data.result.tx?i.data.result.tx:i.data.result})),this.getTxStatus=(t,e=!0)=>s(this,void 0,void 0,(function*(){const i={txID:t,includeReason:e};return(yield this.callMethod("platform.getTxStatus",i)).data.result})),this.getUTXOs=(t,e,i=0,o,a)=>s(this,void 0,void 0,(function*(){"string"===typeof t&&(t=[t]);const s={addresses:t,limit:i};"undefined"!==typeof o&&o&&(s.startIndex=o),"undefined"!==typeof e&&(s.sourceChain=e);const r=yield this.callMethod("platform.getUTXOs",s),n=new A.UTXOSet;let d=r.data.result.utxos;if(a&&"object"===typeof a){if(this.db.has(a.getName())){const t=this.db.get(a.getName());if(Array.isArray(t)){n.addArray(d);const e=new A.UTXOSet;e.addArray(t),e.mergeByRule(n,a.getMergeRule()),d=e.getAllUTXOStrings()}}this.db.set(a.getName(),d,a.getOverwrite())}return n.addArray(d,!1),r.data.result.utxos=n,r.data.result.numFetched=parseInt(r.data.result.numFetched),r.data.result})),this.buildImportTx=(t,e,i,o,n,d,l,h=(0,g.UnixNow)(),c=new r.default(0),u=1)=>s(this,void 0,void 0,(function*(){const s=this._cleanAddressArray(o,"buildBaseTx").map((t=>D.stringToAddress(t))),r=this._cleanAddressArray(n,"buildBaseTx").map((t=>D.stringToAddress(t))),g=this._cleanAddressArray(d,"buildBaseTx").map((t=>D.stringToAddress(t)));let A;if("undefined"===typeof i)throw new m.ChainIdError("Error - PlatformVMAPI.buildImportTx: Source ChainID is undefined.");if("string"===typeof i)A=i,i=D.cb58Decode(i);else if(!(i instanceof a.Buffer))throw new m.ChainIdError("Error - PlatformVMAPI.buildImportTx: Invalid destinationChain type: "+typeof i);const p=yield(yield this.getUTXOs(e,A,0,void 0)).utxos,y=yield this.getAVAXAssetID();l instanceof f.PayloadBase&&(l=l.getPayload());const k=p.getAllUTXOs(),b=t.buildImportTx(this.core.getNetworkID(),D.cb58Decode(this.blockchainID),s,r,g,k,i,this.getTxFee(),y,l,h,c,u);if(!(yield this.checkGooseEgg(b)))throw new m.GooseEggCheckError("Failed Goose Egg Check");return b})),this.buildExportTx=(t,e,i,o,n,d,l,h=(0,g.UnixNow)(),c=new r.default(0),u=1)=>s(this,void 0,void 0,(function*(){let s={};if(o.map((t=>{s[t.split("-")[0]]=!0})),1!==Object.keys(s).length)throw new m.AddressError("Error - PlatformVMAPI.buildExportTx: To addresses must have the same chainID prefix.");if("undefined"===typeof i)throw new m.ChainIdError("Error - PlatformVMAPI.buildExportTx: Destination ChainID is undefined.");if("string"===typeof i)i=D.cb58Decode(i);else if(!(i instanceof a.Buffer))throw new m.ChainIdError("Error - PlatformVMAPI.buildExportTx: Invalid destinationChain type: "+typeof i);if(32!==i.length)throw new m.ChainIdError("Error - PlatformVMAPI.buildExportTx: Destination ChainID must be 32 bytes in length.");let r=[];o.map((t=>{r.push(D.stringToAddress(t))}));const g=this._cleanAddressArray(n,"buildExportTx").map((t=>D.stringToAddress(t))),A=this._cleanAddressArray(d,"buildExportTx").map((t=>D.stringToAddress(t)));l instanceof f.PayloadBase&&(l=l.getPayload());const p=yield this.getAVAXAssetID(),y=t.buildExportTx(this.core.getNetworkID(),D.cb58Decode(this.blockchainID),e,p,r,g,A,i,this.getTxFee(),p,l,h,c,u);if(!(yield this.checkGooseEgg(y)))throw new m.GooseEggCheckError("Failed Goose Egg Check");return y})),this.buildAddDelegatorTx=(t,e,i,o,a,n,d,l,h,c=new r.default(0),u=1,A,p=(0,g.UnixNow)())=>s(this,void 0,void 0,(function*(){const s=this._cleanAddressArray(e,"buildAddDelegatorTx").map((t=>D.stringToAddress(t))),y=this._cleanAddressArray(i,"buildAddDelegatorTx").map((t=>D.stringToAddress(t))),k=this._cleanAddressArray(o,"buildAddDelegatorTx").map((t=>D.stringToAddress(t))),b=this._cleanAddressArray(h,"buildAddValidatorTx").map((t=>D.stringToAddress(t)));A instanceof f.PayloadBase&&(A=A.getPayload());const I=(yield this.getMinStake()).minDelegatorStake;if(l.lt(I))throw new m.StakeError("PlatformVMAPI.buildAddDelegatorTx -- stake amount must be at least "+I.toString(10));const T=yield this.getAVAXAssetID(),x=(0,g.UnixNow)();if(n.lt(x)||d.lte(n))throw new m.TimeError("PlatformVMAPI.buildAddDelegatorTx -- startTime must be in the future and endTime must come after startTime");const w=t.buildAddDelegatorTx(this.core.getNetworkID(),D.cb58Decode(this.blockchainID),T,s,y,k,(0,g.NodeIDStringToBuffer)(a),n,d,l,c,u,b,new r.default(0),T,A,p);if(!(yield this.checkGooseEgg(w)))throw new m.GooseEggCheckError("Failed Goose Egg Check");return w})),this.buildAddValidatorTx=(t,e,i,o,a,n,d,l,h,c,u=new r.default(0),A=1,p,y=(0,g.UnixNow)())=>s(this,void 0,void 0,(function*(){const s=this._cleanAddressArray(e,"buildAddValidatorTx").map((t=>D.stringToAddress(t))),k=this._cleanAddressArray(i,"buildAddValidatorTx").map((t=>D.stringToAddress(t))),b=this._cleanAddressArray(o,"buildAddValidatorTx").map((t=>D.stringToAddress(t))),I=this._cleanAddressArray(h,"buildAddValidatorTx").map((t=>D.stringToAddress(t)));p instanceof f.PayloadBase&&(p=p.getPayload());const T=(yield this.getMinStake()).minValidatorStake;if(l.lt(T))throw new m.StakeError("PlatformVMAPI.buildAddValidatorTx -- stake amount must be at least "+T.toString(10));if("number"!==typeof c||c>100||c<0)throw new m.DelegationFeeError("PlatformVMAPI.buildAddValidatorTx -- delegationFee must be a number between 0 and 100");const x=yield this.getAVAXAssetID(),w=(0,g.UnixNow)();if(n.lt(w)||d.lte(n))throw new m.TimeError("PlatformVMAPI.buildAddValidatorTx -- startTime must be in the future and endTime must come after startTime");const v=t.buildAddValidatorTx(this.core.getNetworkID(),D.cb58Decode(this.blockchainID),x,s,k,b,(0,g.NodeIDStringToBuffer)(a),n,d,l,u,A,I,c,new r.default(0),x,p,y);if(!(yield this.checkGooseEgg(v)))throw new m.GooseEggCheckError("Failed Goose Egg Check");return v})),this.buildCreateSubnetTx=(t,e,i,o,a,r,n=(0,g.UnixNow)())=>s(this,void 0,void 0,(function*(){const s=this._cleanAddressArray(e,"buildCreateSubnetTx").map((t=>D.stringToAddress(t))),d=this._cleanAddressArray(i,"buildCreateSubnetTx").map((t=>D.stringToAddress(t))),l=this._cleanAddressArray(o,"buildCreateSubnetTx").map((t=>D.stringToAddress(t)));r instanceof f.PayloadBase&&(r=r.getPayload());const h=yield this.getAVAXAssetID(),c=t.buildCreateSubnetTx(this.core.getNetworkID(),D.cb58Decode(this.blockchainID),s,d,l,a,this.getCreationTxFee(),h,r,n);if(!(yield this.checkGooseEgg(c,this.getCreationTxFee())))throw new m.GooseEggCheckError("Failed Goose Egg Check");return c})),this.getRewardUTXOs=(t,e)=>s(this,void 0,void 0,(function*(){const i={txID:t,encoding:e};return(yield this.callMethod("platform.getRewardUTXOs",i)).data.result})),this.blockchainID=h.PlatformChainID;const i=t.getNetworkID();if(i in h.Defaults.network&&this.blockchainID in h.Defaults.network[`${i}`]){const{alias:t}=h.Defaults.network[`${i}`][this.blockchainID];this.keychain=new l.KeyChain(this.core.getHRP(),t)}else this.keychain=new l.KeyChain(this.core.getHRP(),this.blockchainID)}_cleanAddressArray(t,e){const i=[],s=this.getBlockchainAlias()?this.getBlockchainAlias():this.getBlockchainID();if(t&&t.length>0)for(let o=0;o<t.length;o++)if("string"===typeof t[`${o}`]){if("undefined"===typeof this.parseAddress(t[`${o}`]))throw new m.AddressError("Error - Invalid address format");i.push(t[`${o}`])}else{const e="bech32";i.push(k.bufferToType(t[`${o}`],e,this.core.getHRP(),s))}return i}}e.PlatformVMAPI=b}}]);